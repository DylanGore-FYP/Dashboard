name: 'build'

on:
  push:
    branches:
      - main
      - ci
    tags:
      - v*

jobs:
  build:
    name: 'Build & Publish Docker Image to GHCR'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Code from GitHub'
        uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=ghcr.io/dylangore-fyp/dashboard
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          tags: ${{ steps.prepare.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prepare.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
      # - name: Docker Buildx (build)
      #   run: |
      #     docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }} .
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Docker Buildx (push)
      #   run: |
      #     docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }} .
      # # - name: Inspect image
      # #   run: |
      # #     docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
